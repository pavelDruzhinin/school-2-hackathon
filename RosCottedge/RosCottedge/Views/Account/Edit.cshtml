@model RosCottedge.Models.User

@{
    ViewBag.Title = "ProfileEdit";
}

@*<h2>Редактирование</h2>*@
<div class="Form formEditInfo mainBox">
    @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { id = "validFormEdit" }))
    {
        @Html.AntiForgeryToken()


        <div class="innerForm">
            <div class="fields">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="largeInputForm">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="smallInputForm">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="smallInputForm floatInput">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="largeInputForm">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="largeInputForm">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                @Html.HiddenFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.HiddenFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.ActionLink("Изменить пароль", "ChangePassword", new { id = Model.Id })


                <input type="submit" value="Сохранить" class="ButtonSaveEdit" />
            </div>
        </div>
}
    </div>

            @*<div>
                @Html.ActionLink("Вернуться назад", "Profile")
            </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.maskedinput.min.js"></script>
        <script>
            $(document).ready(function () {
                $('#Phone').mask("+7(999)999-99-99", { autoclear: false });

                jQuery.validator.addMethod("checkMask", function (value, element) {
                    return /\+\d{1}\(\d{3}\)\d{3}-\d{2}-\d{2}/g.test(value);
                });

                $.validator.addMethod("lettersonly", function (value, element) {
                    return /[а-яА-ЯёЁa-zA-Z]+/.test(value);
                });

            
            });

            $('#validFormEdit').validate({
                rules: {
                    FirstName: {
                        required: true,
                        rangelength: [2, 15],
                        lettersonly: true
                    },
                    MiddleName: {
                        required: true,
                        rangelength: [2, 15],
                        lettersonly: true
                    },
                    LastName: {
                        required: true,
                        rangelength: [2, 15],
                        lettersonly: true
                    },
                    Email: {
                        required: true,
                        email: true,
                        remote: '/Account/IsEmailAvailable'
                    },
                    Phone: {
                        required: true,
                        checkMask: true,
                        remote: '/Account/IsPhoneAvailable'
                    }
                },
                messages: {
                    FirstName: {
                        required: "Введите ваше Имя",
                        rangelength: "Длина Имени, должна быть от 2 до 15 символов",
                        lettersonly: "Имя не может содержать цифры"
                    },
                    MiddleName: {
                        required: "Введите ваше Отчество",
                        rangelength: "Длина Отчества, должна быть от 2 до 15 символов",
                        lettersonly: "Отчество не может содержать цифры"
                    },
                    LastName: {
                        required: "Введите вашу Фамилию",
                        rangelength: "Длина Фамилии, должна быть от 2 до 15 символов",
                        lettersonly: "Фамилия не может содержать цифры"
                    },
                    Email: {
                        required: "Введите ваш e-mail адрес",
                        email: "Неверно введен email",
                        remote: "Введенный e-mail адрес уже используется"
                    },
                    Phone: {
                        required: "Введите ваш номер телефона",
                        checkMask: "Введите полный номер телефона",
                        remote: "Введенный номер телефона уже используется"
                    }
                },
                focusCleanup: true,
                focusInvalid: false
            });
</script>

}